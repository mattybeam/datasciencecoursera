TukeyHSD(an,"Chronograph",ordered=TRUE) # Ordered true ensures positive differences
resist <- read.csv("Table_5_23.csv")
head(resist)
boxplot(Log.Noise~Plate + Shape,data=resist)
boxplot(Log.Noise.~Plate + Shape,data=resist)
boxplot(Log.Noise.~Plate,data=resist)
resist$Plate <- as.factor(resist$Plate)
model <- aov(Log.Noise. ~ Shape + Plate,data=resist)
summary(model)
TukeyHSD(model,"Shape",ordered=TRUE)
corky <- read.csv("Table_7_20.csv")
head(corky)
lm(Time~ A + B + C + A*B + A*C + B*C + A*B*C,data=corky)
airbone <- lm(Time~ A + B + C + A*B + A*C + B*C + A*B*C,data=corky)
summary(airborne)
airborne <- lm(Time~ A + B + C + A*B + A*C + B*C + A*B*C,data=corky)
summary(airborne)
plot(airborne)
2*coef(airborne)
anova(airborne)
anova(airborne)
2*coef(airborne)
student <- lm(Time~Student,data=corky)
anova(student)
summay(student)
summary(student)
2*coef(student)
stain <- read.csv("Table_7_18.csv")
head(stain)
stain$Diff <- stain$After - stain$Before
head(stain)
stain
detail <- lm(Diff ~ A + B + C + A*B + A*C + B*C + Block,data=stain)
detail <- lm(Diff ~ A + B + C + A*B + A*C + B*C + Blocks,data=stain)
anova(detail)
head(stain)
head(corky)
?melt
?cast
install.packages("GAD")
library(GAD)
data(rohlf95)
head(data)
rohlf95
CG <- as.fixed(rohlf95$cages)
MQ <- as.random(rohlf95$mosquito)
model <- lm(wing~CG + CG %in% MQ, data=rohlf95)
gad(model)
summary(model)
estimates(model)
anova(model)
model2 <- lmer(wing~ CG + (1 | MQ), data=rohlf95)
library(lme4)
model2 <- lmer(wing~ CG + (1 | MQ), data=rohlf95)
anova(model2)
summary(model2)
?gad
data(Penicillin)
str(Penicillin)
summary(Penicillin)
plot(Penicillin)
plot(diameter,plate)
plot(diameter,plate,data=Penicillin)
head(Penicillin)
plot(plate~diameter,data=Penicillin)
plot(diameter~plate,data=Penicillin)
xtabs(~sample + plate, data=Pencillin)
xtabs(~sample + plate, data=Penicillin)
fm2 <- lmer(diameter ~ 1 + (1|plate) + (1|sample), Penicillin) # Random-effects model, plate and sample random factors
summary(fm2)
gad(fm2)
plot(diameter~sample,data=Penicillin)
?lattice
pr <- profile(fm2)
confint(pr)
env(fm2)$theta
plot(confint(pr))
splom(pr)
data(Pastes)
str(Pastes)
summary(Pastes)
xtabs(~batch + sample, Pastes, drop=TRUE, sparse=TRUE)
plot(xtabs(~batch + sample, Pastes, drop=TRUE, sparse=TRUE))
plot(strength~cask(batch),Pastes)
plot(strength~cask %in% batch,Pastes)
plot(strength~ 1 + (batch | cask),Pastes)
plot(strength~cask %in% batch,Pastes)
fm2 <- lmer(diameter ~ 1 + (1|plate) + (1|sample), Penicillin) # Random-effects model, plate and sample random factors
summary(fm2)
data(Pastes)
str(Pastes)
fm3 <- lmer(strength ~ 1 + (1 | batch) + (1 | sample),data=Pastes)
summary(fm3)
fm3 <- lmer(strength ~ 1 + (1 | batch) + (1 | sample),data=Pastes,REML=0)
summary(fm3)
fm3a <- lmer(strength ~ 1 + (1 | sample),data=Pastes, REML=0)
summary(fm3a)
lrtest(fm3,fm3a)
anova(fm3,fm3a)
data(ergoStool,package="MEMSS")
install.packages("MEMSS")
data(ergoStool,package="MEMSS")
str(ergoStool)
summary(ergoStool)
xtabs(~Type + Subject,ergoStool)
fm4 <- lmer(effort ~ 1 + (1 | Type) + (1 | Subject), data=ergoStool)
summary(fm4)
plot(effort~Type, data=ergoStool)
plot(fm4)
plot(effort~Subject, data=ergoStool)
plot(effort~Type, data=ergoStool)
plot(effort~Type + Subject, data=ergoStool)
fm4ML <- lmer(effor~ 1 + (1 | Type) + (1 | Subject), data=ergoStool, REML=0)
fm4ML <- lmer(effort ~ 1 + (1 | Type) + (1 | Subject), data=ergoStool, REML=0)
summary(fm4ML)
pr1 <- profile(fm4ML)
confint(pr1)
dotplot(ranef(fm4, which = "Type", postVar=TRUE),aspect=0.2,strip=FALSE)
dotplot(ranef(fm4, which = "Type", condVar=TRUE),aspect=0.2,strip=FALSE)
dotplot(ranef(fm4, which = "Type", condVar=TRUE),aspect=0.2,strip=FALSE)
dotplot(ranef(fm4, which = "Subject", condVar=TRUE),aspect=0.2,strip=FALSE)
a <- package.list()
a <- available.packages()
head(rownames(a))
head(a)
install.packages(KernSmooth)
install.packages("KernSmooth")
KernSmooth
library(KernSmooth)
setwd("~/Documents/Northwestern/Programming/R")
bids <- read.csv('Law_Bids_Fall_2014.csv')
head(bids)
bids_contracts <- subset(bids,Class=="Basics of Contract Drafting")
mean(bids_contracts$Rd.1.Points)
table(bids_contracts$Professor)
mean(bids_contracts$Rd.1.Points[bids_contracts$Professor=="Mullaney"])
lm_contracts <- lm(Rd.1.Points~Professor,data=bids_contracts)
summary(lm_contracts)
anova(lm_contracts)
lm_contracts2 <- lm(Rd.1.Points~Term,data=bids_contracts)
summary(lm_contracts2)
anova(lm_contracts2)
lm_contracts3 <- lm(Rd.1.Points~Professor + Term,data=bids_contracts)
summary(lm_contracts3)
table(bids_contracts$Professor)
anova(lm_contracts2)
anova(lm_contracts3)
summary(lm_contracts1)
lm_contracts1 <- lm(Rd.1.Points~Professor,data=bids_contracts)
summary(lm_contracts1)
bids_contracts2 <- subset(bids_contracts,Professor != "Payne")
mean(bids_contracts2$Rd.1.Points)
mean(bids_contracts2$Rd.1.Points[bids_contracts2$Professor=="Mullaney"])
mean(bids_contracts$Rd.1.Points[bids_contracts$Professor=="Mullaney"])
summary(bids_contracts$Rd.1.Points[bids_contracts$Professor=="Mullaney"])
summary(bids_contracts$Rd.1.Points)
hist(bids_contracts$Rd.1.Points)
qqnorm(bids_contracts$Rd.1.Points)
plot(lm_contracts1)
plot(density(bids_contracts$Rd.1.Points))
plot(edcf(bids_contracts$Rd.1.Points))
plot(ecdf(bids_contracts$Rd.1.Points))
sd(bids_contracts$Rd.1.Points)
rand_contracts <- rnorm(n = 100,mean = mean(bids_contracts$Rd.1.Points),sd = sd(bids_contracts$Rd.1.Points))
hist(rand_contracts)
good_bid_contracts <- rep(0,100)
good_bid_contracts <- ifelse(1051>=rand_contracts,1,0)
sum(good_bid_contracts)
pnorm(q = 0,mean = 0,sd = 1)
pnorm(q = 1051,mean = mean(bids_contracts$Rd.1.Points),sd = sd(bids_contracts$Rd.1.Points))
summary(bids_contracts$Rd.1.Points)
sd(bids_contracts2$Rd.1.Points)
plot(density(bids_contracts2$Rd.1.Points)) # Density estimate of data
plot(ecdf(bids_contracts2$Rd.1.Points)) # Empirical cdf of data
rand_contracts <- rnorm(n = 100,mean = mean(bids_contracts2$Rd.1.Points),sd = sd(bids_contracts2$Rd.1.Points))
hist(rand_contracts)
good_bid_contracts <- rep(0,100)
good_bid_contracts <- ifelse(1051>=rand_contracts,1,0)
sum(good_bid_contracts)
pnorm(q = 1051,mean = mean(bids_contracts2$Rd.1.Points),sd = sd(bids_contracts2$Rd.1.Points))
bids_neg <- subset(bids,Class=="Negotiation")
mean(bids_neg$Rd.1.Points)
mean(bids_neg$Rd.1.Points)
table(bids_neg$Professor)
mean(bids_neg$Rd.1.Points[bids_neg$Professor=="Gandert"])
lm_neg1 <- lm(Rd.1.Points~Professor,data=bids_neg)
summary(lm_neg1)
anova(lm_neg1)
bids_neg$Professor <- relevel(x = bids_neg$Professor,ref = "Gandert")
lm_neg1 <- lm(Rd.1.Points~Professor,data=bids_neg)
summary(lm_neg1)
anova(lm_neg1)
# Significant difference between professors at alpha=.001
lm_neg2 <- lm(Rd.1.Points~Term,data=bids_neg)
summary(lm_neg2)
anova(lm_neg2)
lm_neg3 <- lm(Rd.1.Points~Professor + Term,data=bids_neg)
summary(lm_neg3)
lm_neg3 <- lm(Rd.1.Points~Professor + Term + Professor*Term,data=bids_neg)
summary(lm_neg3)
anova(lm_neg3)
bids_neg2 <- subset(bids_neg,!(Professor %in% c("Sachar","Shapiro","Zulanas") ))
mean(bids_neg2$Rd.1.Points)
mean(bids_neg$Rd.1.Points)
mean(bids_neg$Rd.1.Points[bids_neg$Professor=="Gandert"])
summary(bids_neg$Rd.1.Points[bids_neg$Professor=="Mullaney"])
summary(bids_neg$Rd.1.Points[bids_neg$Professor=="Gandert"])
summary(bids_neg$Rd.1.Points)
bids_neg
summary(lm_neg2)
summary(lm_neg1)
bids_neg2 <- subset(bids_neg,!(Professor %in% c("Chadha","Sachar","Shapiro","Zulanas") ))
mean(bids_neg2$Rd.1.Points)
summary(bids_neg$Rd.1.Points[bids_neg$Professor=="Gandert"])
summary(bids_neg$Rd.1.Points)
summary(bids_neg2$Rd.1.Points)
bids_neg2
summary(bids_neg$Rd.1.Points[bids_neg$Professor=="Gandert"])
summary(bids_neg2$Rd.1.Points)
plot(density(bids_neg2$Rd.1.Points)) # Density estimate of data
plot(ecdf(bids_neg2$Rd.1.Points)) # Empirical cdf of data
qqnorm(bids_neg2$Rd.1.Points)
sd(bids_neg2$Rd.1.Points)
mean(bids_neg2$Rd.1.Points)
rand_neg <- rnorm(n = 100,mean = mean(bids_neg2$Rd.1.Points),sd = sd(bids_neg2$Rd.1.Points))
hist(rand_neg)
good_bid_neg <- rep(0,100)
good_bid_neg <- ifelse(1051>=rand_neg,1,0)
sum(good_bid_neg)
pnorm(q = 602,mean = mean(bids_neg2$Rd.1.Points),sd = sd(bids_neg2$Rd.1.Points))
pnorm(q = 602,mean = mean(bids_neg2$Rd.1.Points[bids_neg$Professor=="Gandert"]),
sd = sd(bids_neg2$Rd.1.Points[bids_neg$Professor=="Gandert"]))
mean(bids_neg2$Rd.1.Points[bids_neg$Professor=="Gandert"])
pnorm(q = 602,mean = mean(bids_neg2$Rd.1.Points[bids_neg2$Professor=="Gandert"]),
sd = sd(bids_neg2$Rd.1.Points[bids_neg2$Professor=="Gandert"]))
bids_med <- subset(bids,Class=="Mediation")
mean(bids_med$Rd.1.Points)
bids_med
bids_med <- subset(bids,Class=="Mediation Process")
mean(bids_med$Rd.1.Points)
table(bids_med$Professor)
mean(bids_med$Rd.1.Points[bids_med$Professor=="Carrel"])
# Set reference level to Carrel
bids_med$Professor <- relevel(x = bids_med$Professor,ref = "Carrel")
lm_med1 <- lm(Rd.1.Points~Professor,data=bids_med)
summary(lm_med1)
bids_med
table(bids$Class)
bids_neg <- subset(bids,Class=="Mergers and Acquisitions")
bids_ma <- subset(bids,Class=="Mergers and Acquisitions")
bids_ma <- subset(bids,Class=="Mergers and Acquisitions")
mean(bids_ma$Rd.1.Points)
bids_ma <- subset(bids,Class=="Mergers and Acquisitions")
bids_ma
bids_ma <- subset(bids,Class=="Mergers and Acquistions")
mean(bids_ma$Rd.1.Points)
table(bids_ma$Professor)
mean(bids_ma$Rd.1.Points[bids_ma$Professor=="Lutz"])
# Set reference level to Lutz
bids_ma$Professor <- relevel(x = bids_ma$Professor,ref = "Lutz")
lm_ma1 <- lm(Rd.1.Points~Professor,data=bids_ma)
summary(lm_ma1)
anova(lm_ma1)
lm_ma2 <- lm(Rd.1.Points~Term,data=bids_ma)
summary(lm_ma2)
anova(lm_ma2)
lm_ma3 <- lm(Rd.1.Points~Professor + Term + Professor*Term,data=bids_ma)
summary(lm_ma3)
anova(lm_ma3)
bids_ma2 <- subset(bids_ma,!(Professor %in% c("Black","Fiebig") ))
mean(bids_ma2$Rd.1.Points)
bids_ma2 <- subset(bids_ma,!(Professor %in% c("Fiebig") ))
mean(bids_ma2$Rd.1.Points)
bids_ma2 <- subset(bids_ma,!(Professor %in% c("Black") ))
mean(bids_ma2$Rd.1.Points)
bids_ma2 <- subset(bids_ma,!(Professor %in% c("Fiebig") ))
mean(bids_ma2$Rd.1.Points)
summary(bids_ma$Rd.1.Points[bids_ma$Professor=="Lutz"])
# 8 data points for Lutz
summary(bids_ma2$Rd.1.Points)
plot(density(bids_ma2$Rd.1.Points)) # Density estimate of data
plot(ecdf(bids_ma2$Rd.1.Points)) # Empirical cdf of data
qqnorm(bids_ma2$Rd.1.Points)
sd(bids_ma2$Rd.1.Points)
rand_ma <- rnorm(n = 100,mean = mean(bids_ma2$Rd.1.Points),sd = sd(bids_ma2$Rd.1.Points))
hist(rand_ma)
good_bid_ma <- rep(0,100)
good_bid_ma <- ifelse(1051>=rand_ma,1,0)
sum(good_bid_ma)
good_bid_ma <- ifelse(451>=rand_ma,1,0)
sum(good_bid_ma)
pnorm(q = 451,mean = mean(bids_ma2$Rd.1.Points),sd = sd(bids_ma2$Rd.1.Points))
pnorm(q = 451,mean = mean(bids_ma2$Rd.1.Points[bids_ma2$Professor=="Lutz"]),
sd = sd(bids_ma2$Rd.1.Points[bids_ma2$Professor=="Lutz"]))
bids_ma2 <- subset(bids_ma,!(Professor %in% c("Black","Fiebig") ))
mean(bids_ma2$Rd.1.Points)
summary(bids_ma$Rd.1.Points[bids_ma$Professor=="Lutz"])
# 5 data points for Lutz
summary(bids_ma2$Rd.1.Points)
# Generate 100 random numbers from distribution with mean and standard deviation
plot(density(bids_ma2$Rd.1.Points)) # Density estimate of data
plot(ecdf(bids_ma2$Rd.1.Points)) # Empirical cdf of data
qqnorm(bids_ma2$Rd.1.Points)
sd(bids_ma2$Rd.1.Points)
rand_ma <- rnorm(n = 100,mean = mean(bids_ma2$Rd.1.Points),sd = sd(bids_ma2$Rd.1.Points))
hist(rand_ma)
good_bid_ma <- rep(0,100)
good_bid_ma <- ifelse(451>=rand_ma,1,0)
sum(good_bid_ma)
pnorm(q = 451,mean = mean(bids_ma2$Rd.1.Points),sd = sd(bids_ma2$Rd.1.Points))
pnorm(q = 451,mean = mean(bids_ma2$Rd.1.Points[bids_ma2$Professor=="Lutz"]),
sd = sd(bids_ma2$Rd.1.Points[bids_ma2$Professor=="Lutz"]))
bids_ma
bids_contracts
bids_contracts[bids_contracts$Professor=="Mullaney"]
bids_contracts[bids_contracts$Professor=="Mullaney",]
bids_ma2
bids_ma2 <- subset(bids_ma2,!(Professor=="Lutz" & Term="Spring"))
bids_ma2 <- subset(bids_ma2,!(Professor=="Lutz" && Term="Spring"))
bids_ma2 <- subset(bids_ma2,!(Professor=="Lutz" && Term=="Spring"))
bids_ma2
bids_ma2 <- subset(bids_ma2,!(Professor=="Lutz" & Term=="Spring"))
bids_ma2
summary(bids_ma2$Rd.1.Points)
plot(density(bids_ma2$Rd.1.Points)) # Density estimate of data
plot(ecdf(bids_ma2$Rd.1.Points)) # Empirical cdf of data
qqnorm(bids_ma2$Rd.1.Points)
sd(bids_ma2$Rd.1.Points)
rand_ma <- rnorm(n = 100,mean = mean(bids_ma2$Rd.1.Points),sd = sd(bids_ma2$Rd.1.Points))
hist(rand_ma)
good_bid_ma <- rep(0,100)
good_bid_ma <- ifelse(451>=rand_ma,1,0)
sum(good_bid_ma)
pnorm(q = 451,mean = mean(bids_ma2$Rd.1.Points),sd = sd(bids_ma2$Rd.1.Points))
pnorm(q = 451,mean = mean(bids_ma2$Rd.1.Points[bids_ma2$Professor=="Lutz"]),
sd = sd(bids_ma2$Rd.1.Points[bids_ma2$Professor=="Lutz"]))
table(bids$Class)
bids_tax <- subset(bids,Class=="Basic Federal Income Taxation")
bids_tax
bids_tax[bids_tax$Professor=="Crane",]
mean(bids_tax$Rd.1.Points)
table(bids_tax$Professor)
mean(bids_tax$Rd.1.Points[bids_tax$Professor=="Crane"])
# Set reference level to Crane
bids_tax$Professor <- relevel(x = bids_tax$Professor,ref = "Crane")
lm_tax1 <- lm(Rd.1.Points~Professor,data=bids_tax)
summary(lm_tax1)
anova(lm_tax1)
lm_tax2 <- lm(Rd.1.Points~Term,data=bids_tax)
summary(lm_tax2)
anova(lm_tax2)
lm_tax3 <- lm(Rd.1.Points~Professor + Term + Professor*Term,data=bids_tax)
summary(lm_tax3)
anova(lm_tax3)
bids_tax2 <- subset(bids_tax,!(Professor %in% c("Brennan") ))
mean(bids_tax2$Rd.1.Points)
summary(bids_tax$Rd.1.Points[bids_tax$Professor=="Crane"])
summary(bids_tax2$Rd.1.Points)
bids_tax2[bids_tax2$Rd.1.Points==100]
bids_tax2[bids_tax2$Rd.1.Points==100,]
bids_tax2
plot(density(bids_tax2$Rd.1.Points)) # Density estimate of data
plot(ecdf(bids_tax2$Rd.1.Points)) # Empirical cdf of data
qqnorm(bids_tax2$Rd.1.Points)
sd(bids_tax2$Rd.1.Points)
rand_tax <- rnorm(n = 100,mean = mean(bids_tax2$Rd.1.Points),sd = sd(bids_tax2$Rd.1.Points))
hist(rand_tax)
good_bid_tax <- rep(0,100)
good_bid_tax <- ifelse(11>=rand_tax,1,0)
sum(good_bid_tax)
pnorm(q = 11,mean = mean(bids_tax2$Rd.1.Points),sd = sd(bids_tax2$Rd.1.Points))
pnorm(q = 11,mean = mean(bids_tax2$Rd.1.Points[bids_tax2$Professor=="Crane"]),
sd = sd(bids_tax2$Rd.1.Points[bids_tax2$Professor=="Crane"]))
table(bids$Class)
bids_comm <- subset(bids,Class=="Commercial Secured Transaction")
mean(bids_comm$Rd.1.Points)
table(bids_comm$Professor)
mean(bids_comm$Rd.1.Points[bids_comm$Professor=="Francis"])
# Set reference level to Francis
bids_comm$Professor <- relevel(x = bids_comm$Professor,ref = "Francis")
lm_comm1 <- lm(Rd.1.Points~Professor,data=bids_comm)
lm_comm2 <- lm(Rd.1.Points~Term,data=bids_comm)
summary(lm_comm2)
anova(lm_comm2)
# No significant difference in term
bids_comm
plot(density(bids_comm$Rd.1.Points)) # Density estimate of data
plot(ecdf(bids_comm$Rd.1.Points)) # Empirical cdf of data
qqnorm(bids_comm$Rd.1.Points)
sd(bids_comm$Rd.1.Points)
rand_comm <- rnorm(n = 100,mean = mean(bids_comm2$Rd.1.Points),sd = sd(bids_comm2$Rd.1.Points))
rand_comm <- rnorm(n = 100,mean = mean(bids_comm$Rd.1.Points),sd = sd(bids_comm$Rd.1.Points))
hist(rand_comm)
good_bid_comm <- rep(0,100)
good_bid_comm <- ifelse(1051>=rand_comm,1,0)
sum(good_bid_comm)
good_bid_comm <- ifelse(10>=rand_comm,1,0)
sum(good_bid_comm)
pnorm(q = 10,mean = mean(bids_comm2$Rd.1.Points),sd = sd(bids_comm2$Rd.1.Points))
pnorm(q = 10,mean = mean(bids_comm$Rd.1.Points),sd = sd(bids_comm$Rd.1.Points))
pnorm(q = 10,mean = mean(bids_comm2$Rd.1.Points[bids_comm2$Professor=="Francis"]),
sd = sd(bids_comm2$Rd.1.Points[bids_comm2$Professor=="Francis"]))
pnorm(q = 10,mean = mean(bids_comm$Rd.1.Points[bids_comm$Professor=="Francis"]),
sd = sd(bids_comm$Rd.1.Points[bids_comm$Professor=="Francis"]))
bids_comm
table(bids$Class)
bids_neg <- subset(bids,Class %in% c("Bankruptcy Trial Practice","Bankruptcy Taxation"))
bids_bank <- subset(bids,Class %in% c("Bankruptcy Trial Practice","Bankruptcy Taxation"))
bids_bank <- subset(bids,Class %in% c("Bankruptcy Trial Practice","Bankruptcy Taxation"))
mean(bids_bank$Rd.1.Points)
table(bids_bank$Professor)
lm_bank1 <- lm(Rd.1.Points~Professor,data=bids_bank)
summary(lm_bank1)
anova(lm_bank1)
lm_bank2 <- lm(Rd.1.Points~Term,data=bids_bank)
plot(density(bids_bank$Rd.1.Points)) # Density estimate of data
plot(ecdf(bids_bank$Rd.1.Points)) # Empirical cdf of data
bids_bank
qqnorm(bids_bank$Rd.1.Points)
sd(bids_bank$Rd.1.Points)
rand_bank <- rnorm(n = 100,mean = mean(bids_bank$Rd.1.Points),sd = sd(bids_bank$Rd.1.Points))
hist(rand_bank)
good_bid_bank <- rep(0,100)
good_bid_bank <- ifelse(9>=rand_bank,1,0)
sum(good_bid_bank)
pnorm(q = 9,mean = mean(bids_bank9$Rd.1.Points),sd = sd(bids_bank$Rd.1.Points))
pnorm(q = 9,mean = mean(bids_bank$Rd.1.Points),sd = sd(bids_bank$Rd.1.Points))
bids_neg <- subset(bids,Class=="Negotiation")
mean(bids_neg$Rd.1.Points)
table(bids_neg$Professor)
mean(bids_neg$Rd.1.Points[bids_neg$Professor=="Gandert"])
# Set reference level to Gandert
bids_neg$Professor <- relevel(x = bids_neg$Professor,ref = "Gandert")
lm_neg1 <- lm(Rd.1.Points~Professor,data=bids_neg)
summary(lm_neg1)
anova(lm_neg1)
mean(bids_neg$Rd.1.Points[bids_neg$Professor=="Agnew"])
bids_neg$Rd.1.Points[bids_neg$Professor=="Agnew"]
bids_neg[bids_neg$Professor=="Agnew",]
setwd("~/datasciencecoursera")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
2
submit()
submit()
submit()
# A function to calculate the correlation between sulfate and nitrate for monitor locations where the number of completely
# observed cases is greater than a threshold
corr <- function(directory, threshold = 0) {
## INPUT:  directory = character, location of the CSV files
##         threshold = numeric, number of completely observed observations (on all
##                     variables) required to compute the correlation between
##                     nitrate and sulfate; the default is 0
## OUPUT: numeric vector of correlations
setwd("~/datasciencecoursera")
# Initialize vector of correlations
cr <- numeric()
# Use complete to find monitor locations with complete cases above threshold
comp <- complete("specdata")
above <- which(comp$nobs > max(threshold,0))
if (length(above) == 0){
return(cr)
} else {
# Initialize vector of correlations
cr <- numeric(length = length(above))
for (i in 1:length(above)){
if (nchar(comp$id[above[i]]) == 1){
k <- paste0("00",comp$id[above[i]])
} else if (nchar(comp$id[above[i]]) == 2){
k <- paste0("0",comp$id[above[i]])
} else k <- comp$id[above[i]]
data <- read.csv(paste0(directory,"/",k,".csv"))
cr[i] <- round(cor(data[,2],data[,3],use="complete.obs"),5)
}
return(cr)
}
}
submit()
submit()
# A function to calculate the correlation between sulfate and nitrate for monitor locations where the number of completely
# observed cases is greater than a threshold
corr <- function(directory, threshold = 0) {
## INPUT:  directory = character, location of the CSV files
##         threshold = numeric, number of completely observed observations (on all
##                     variables) required to compute the correlation between
##                     nitrate and sulfate; the default is 0
## OUPUT: numeric vector of correlations
setwd("~/datasciencecoursera")
# Initialize vector of correlations
cr <- numeric()
# Use complete to find monitor locations with complete cases above threshold
comp <- complete("specdata")
above <- which(comp$nobs > max(threshold,0))
if (length(above) == 0){
return(cr)
} else {
# Initialize vector of correlations
cr <- numeric(length = length(above))
for (i in 1:length(above)){
if (nchar(comp$id[above[i]]) == 1){
k <- paste0("00",comp$id[above[i]])
} else if (nchar(comp$id[above[i]]) == 2){
k <- paste0("0",comp$id[above[i]])
} else k <- comp$id[above[i]]
data <- read.csv(paste0(directory,"/",k,".csv"))
cr[i] <- cor(data[,2],data[,3],use="complete.obs")
}
return(cr)
}
}
submit()
submit()
